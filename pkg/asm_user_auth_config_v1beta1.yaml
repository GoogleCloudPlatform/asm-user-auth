apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: userauthconfigs.security.anthos.io
  annotations:
    # TODO(piyushn): Find out the right version
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: "null"
spec:
  group: security.anthos.io
  names:
    kind: UserAuthConfig
    listKind: UserAuthConfigList
    plural: userauthconfigs
    singular: userauthconfig
  preserveUnknownFields: false
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          description: UserAuthConfig is the schema for the userauthproxyconfigs API.
          properties:
            apiVersion:
              type: string
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            kind:
              type: string
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            metadata:
              type: object
            spec:
              type: object
              description: UserAuthConfig defines the desired state of User Auth binary.
              properties:
                authentication:
                  type: object
                  description: Details of the authentication endpoint to use.
                  properties:
                    oidc:
                      type: object
                      description: OIDC specific configuration.
                      properties:
                        certificateAuthorityData:
                          type: string
                          description: CertificateAuthorityData contains PEM-encoded certificate authority certificate for OIDC provider.
                        groupsClaim:
                          type: string
                          description: Name of the claim in the OIDC ID Token that holds the user's group information. This claim should contain a comma-separated list of strings, eg. ["group1", "group2"].
                        issuerURI:
                          type: string
                          description: The issuer in the idtoken issued by OIDC provider. This will be used to validate the idtoken.
                        oauthCredentialsSecret:
                          type: object
                          description: secret references to the Kubernetes Opaque type secret which contains OAuth2 OIDC client_id and client_secret in JSON payload.
                          properties:
                            name:
                              type: string
                              description: Name of the secret which stores OAuth2 OIDC credentials.
                            namespace:
                              type: string
                              description: Namespace of the secret which stores OAuth2 OIDC credentials.
                          required:
                            - name
                            - namespace
                        redirectURIHost:
                          type: string
                          description: The host to be used for OAuth termination URI. If not present the host from the target URL will be used. This value can be utilized when a user auth sso session is desired at a higher level domain. For example, to enable sso between profile.example.com/ and admin.example.com/, this value can be set to example.com. It'll enable user auth session to be established at example.com that'll be shared amongst all subdomains. Note that if multiple domains are being served from the same mesh, example1.com and example2.com, the feature can not be used, and is recommended to be left empty.
                        redirectURIPath:
                          type: string
                          default: "/_gcp_asm/authenticate"
                          description: The oauth termination path. It is required for this path to be served from the same ingress as the application for a successful user auth session. Note, this path will always terminate at user auth binary.
                        scopes:
                          type: string
                          description: Comma-separated list of identifiers used to specify what access privileges are being requested in addition to "openid" scope, eg. "groups,allatclaim".
                      required:
                        - oauthCredentialsSecret
                        - issuerURI
                        - redirectURIHost
                        - redirectURIPath
                outputJWTAudience:
                  type: string
                  description: The value of the 'aud' field in the JWT generated by auth service.
            status:
              type: object
              description: UserAuthConfigStatus defines the observed state of auth service.
              properties:
                userAuthService:
                  type: string
                  description: UserAuthService contains a message which records the status of applying the current configuration set.
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
